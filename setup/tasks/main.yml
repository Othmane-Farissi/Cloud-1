- name: Update and Upgrade apt packages
  apt:
    update_cache: true
    upgrade: dist
  ignore_errors: true
  tags: system

- name: Install required system packages
  apt:
    name:
      - docker.io
      - python3-pip
      - curl
    state: present
    update_cache: true
  tags: packages

- name: Ensure Docker service is running and enabled
  service:
    name: docker
    state: started
    enabled: yes
  tags: docker

- name: Add current user to docker group
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes
  tags: docker

# Permanent Docker Compose V2 Solution
- name: Create system-wide Docker plugins directory
  become: yes
  file:
    path: /usr/local/lib/docker/cli-plugins
    state: directory
    mode: '0755'
  tags: docker-compose

- name: Download Docker Compose v2.27.0 (system-wide)
  become: yes
  get_url:
    url: https://github.com/docker/compose/releases/download/v2.27.0/docker-compose-linux-x86_64
    dest: /usr/local/lib/docker/cli-plugins/docker-compose
    mode: '0755'
  tags: docker-compose

- name: Create symbolic link for backward compatibility
  become: yes
  file:
    src: /usr/local/lib/docker/cli-plugins/docker-compose
    dest: /usr/local/bin/docker-compose
    state: link
    force: yes
  tags: docker-compose

- name: Verify Docker Compose installation
  command: docker compose version
  register: compose_check
  changed_when: false
  failed_when: "'Docker Compose version' not in compose_check.stdout"
  tags: docker-compose

# Rest of your existing tasks...
- name: Create application data directory
  file:
    path: "/home/{{ ansible_user }}/data"
    state: directory
    mode: '0755'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Create MariaDB volume directory
  file:
    path: "/home/{{ ansible_user }}/data/mariadb"
    state: directory
    mode: '0755'
    owner: "999"  # MariaDB typically runs as UID 999
    group: "999"

- name: Create WordPress volume directory
  file:
    path: "/home/{{ ansible_user }}/data/wp_data"
    state: directory
    mode: '0755'
    owner: "www-data"  # Typically UID 33
    group: "www-data"

- name: Verify directory structure
  ansible.builtin.command: ls -la /home/{{ ansible_user }}/data
  register: dir_listing
  changed_when: false

- name: Display directory structure
  ansible.builtin.debug:
    var: dir_listing.stdout_lines

- name: Ensure phpMyAdmin directory exists
  file:
    path: /etc/phpmyadmin
    state: directory
    mode: '0755'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  tags: directories

- name: Deploy .env configuration file
  template:
    src: ../templates/data.j2
    dest: /home/application/.env
  tags: config

- name: Deploy application source files
  copy:
    src: files/
    dest: /home/application/
    mode: '0644'
    force: yes  # Always overwrite files

- name: Ensure Docker stack is running
  block:
    - name: Stop and remove existing containers
      command: docker compose down
      args:
        chdir: /home/application
      ignore_errors: yes
      changed_when: false

    - name: Verify data directories exist
      file:
        path: "/home/{{ ansible_user }}/data/{{ item }}"
        state: directory
        mode: '0755'
        owner: "{{ '999' if item == 'mariadb' else 'www-data' }}"
        group: "{{ '999' if item == 'mariadb' else 'www-data' }}"
      loop:
        - mariadb
        - wp_data

    - name: Start containers with health checks
      command: docker compose up -d --build
      args:
        chdir: /home/application
      register: compose_up
      retries: 3
      delay: 10
      until: compose_up.rc == 0

    - name: Verify containers are healthy
      command: docker compose ps --services --filter "status=running"
      args:
        chdir: /home/application
      register: running_services
      changed_when: false
      failed_when: "'mariadb' not in running_services.stdout or 'phpwordpress' not in running_services.stdout"
  tags: deploy